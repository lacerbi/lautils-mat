function y = dilog_quick(x)
%DILOG_APPROX Quick approximation of Spence's function in [0,1].

p = [0.8,0.95];
y = zeros(size(x));

% Approximate Spence's function via linear interpolation using hard-coded 
% tabular values of dilogarithm (Spence's function)

idx = x <= p(1);
if any(idx)
    X1 = [0.; 0.0160; 0.0320; 0.0480; 0.0640; 0.0800; 0.0960; 0.1120; 0.1280; 0.1440; 0.1600; 0.1760; 0.1920; 0.2080; 0.2240; 0.2400; 0.2560; 0.2720; 0.2880; 0.3040; 0.3200; 0.3360; 0.3520; 0.3680; 0.3840; 0.4000; 0.4160; 0.4320; 0.4480; 0.4640; 0.4800; 0.4960; 0.5120; 0.5280; 0.5440; 0.5600; 0.5760; 0.5920; 0.6080; 0.6240; 0.6400; 0.6560; 0.6720; 0.6880; 0.7040; 0.7200; 0.7360; 0.7520; 0.7680; 0.7840; 0.8000];
    V1 = [0.00000000; 0.01606446; 0.03225971; 0.04858863; 0.06505422; 0.08165959; 0.09840796; 0.11530270; 0.13234730; 0.14954540; 0.16690079; 0.18441743; 0.20209943; 0.21995110; 0.23797694; 0.25618167; 0.27457020; 0.29314771; 0.31191961; 0.33089158; 0.35006961; 0.36945998; 0.38906932; 0.40890461; 0.42897323; 0.44928297; 0.46984211; 0.49065939; 0.51174411; 0.53310616; 0.55475609; 0.57670514; 0.59896533; 0.62154958; 0.64447171; 0.66774664; 0.69139046; 0.71542056; 0.73985584; 0.76471684; 0.79002602; 0.81580799; 0.84208982; 0.86890142; 0.89627601; 0.92425065; 0.95286696; 0.98217193; 1.01221904; 1.04306960; 1.07479460];
    y(idx) = lininterp1(X1,V1,x(idx));
end

idx = (x > p(1)) & (x <= p(2));
if any(idx)
    X2 = [0.8000; 0.8030; 0.8060; 0.8090; 0.8120; 0.8150; 0.8180; 0.8210; 0.8240; 0.8270; 0.8300; 0.8330; 0.8360; 0.8390; 0.8420; 0.8450; 0.8480; 0.8510; 0.8540; 0.8570; 0.8600; 0.8630; 0.8660; 0.8690; 0.8720; 0.8750; 0.8780; 0.8810; 0.8840; 0.8870; 0.8900; 0.8930; 0.8960; 0.8990; 0.9020; 0.9050; 0.9080; 0.9110; 0.9140; 0.9170; 0.9200; 0.9230; 0.9260; 0.9290; 0.9320; 0.9350; 0.9380; 0.9410; 0.9440; 0.9470; 0.9500];
    V2 = [1.07479460; 1.08084690; 1.08693342; 1.09305478; 1.09921162; 1.10540461; 1.11163443; 1.11790179; 1.12420741; 1.13055208; 1.13693656; 1.14336168; 1.14982829; 1.15633726; 1.16288951; 1.16948599; 1.17612769; 1.18281565; 1.18955092; 1.19633463; 1.20316796; 1.21005212; 1.21698838; 1.22397808; 1.23102263; 1.23812348; 1.24528218; 1.25250035; 1.25977969; 1.26712200; 1.27452916; 1.28200319; 1.28954619; 1.29716041; 1.30484824; 1.31261220; 1.32045499; 1.32837949; 1.33638878; 1.34448615; 1.35267516; 1.36095962; 1.36934365; 1.37783173; 1.38642871; 1.39513989; 1.40397107; 1.41292861; 1.42201955; 1.43125171; 1.44063380];
    y(idx) = lininterp1(X2,V2,x(idx));
end

idx = x > p(2);
if any(idx)
    X3 = [0.9500; 0.9510; 0.9520; 0.9530; 0.9540; 0.9550; 0.9560; 0.9570; 0.9580; 0.9590; 0.9600; 0.9610; 0.9620; 0.9630; 0.9640; 0.9650; 0.9660; 0.9670; 0.9680; 0.9690; 0.9700; 0.9710; 0.9720; 0.9730; 0.9740; 0.9750; 0.9760; 0.9770; 0.9780; 0.9790; 0.9800; 0.9810; 0.9820; 0.9830; 0.9840; 0.9850; 0.9860; 0.9870; 0.9880; 0.9890; 0.9900; 0.9910; 0.9920; 0.9930; 0.9940; 0.9950; 0.9960; 0.9970; 0.9980; 0.9990; 1.0000];
    V3 = [1.44063380; 1.44379613; 1.44697659; 1.45017559; 1.45339354; 1.45663090; 1.45988813; 1.46316572; 1.46646418; 1.46978404; 1.47312586; 1.47649023; 1.47987778; 1.48328914; 1.48672503; 1.49018615; 1.49367328; 1.49718725; 1.50072890; 1.50429917; 1.50789904; 1.51152955; 1.51519183; 1.51888707; 1.52261657; 1.52638171; 1.53018402; 1.53402511; 1.53790677; 1.54183093; 1.54579971; 1.54981547; 1.55388078; 1.55799852; 1.56217193; 1.56640462; 1.57070071; 1.57506492; 1.57950267; 1.58402034; 1.58862545; 1.59332703; 1.59813616; 1.60306673; 1.60813661; 1.61336977; 1.61879993; 1.62447819; 1.63049140; 1.63702261; 1.64493407];
    y(idx) = lininterp1(X3,V3,x(idx));
end

end


function Vout = lininterp1(X,V,Xq)
%LININTERP1 Linear interpolation.

N = size(X,1);

% Gets the x spacing
dx = 1/(X(2)-X(1));  % one over to perform divide only once
Xq = Xq - X(1);      % subtract minimum of x

Xqi = Xq*dx+1;          % indices of nearest-lower-neighbors
flag = Xqi<1 | Xqi>N | isnan(Xqi);
                                % finds indices out of bounds
Xqi = floor(Xqi);
                                
V = [V; NaN(1, size(V,2))];
Xqi(flag) = size(V,1)-1;

delta = Xqi - Xq*dx;

linind1 = bsxfun(@plus, Xqi, N*(0:size(V,2)-1));
linind2 = bsxfun(@plus, Xqi + 1, N*(0:size(V,2)-1));

out1 = reshape(V(linind1),size(Xq));
out2 = reshape(V(linind2),size(Xq));

out1(isnan(out1)) = 0;
out2(isnan(out2)) = 0;

Vout = bsxfun(@times,delta,out1) + bsxfun(@times,1-delta,out2);
Vout(flag) = NaN;

end